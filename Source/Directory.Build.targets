<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--This file can be used to add targets to all projects within this directory and sub-directories when a solution from this directory is build.-->

  <!--NuGet packages that all projects should use-->
  <ItemGroup>
    <PackageReference Include="JetBrains.Annotations"
                      Version="2019.1.3" />
    <PackageReference Include="JetBrains.ExternalAnnotations"
                      Version="10.2.77" />
    <PackageReference Include="NuGet.Build.Tasks.Pack"
                      Version="5.5.1"
                      IncludeAssets="runtime; build; native; contentfiles; analyzers; buildtransitive"
                      PrivateAssets="all" />
  </ItemGroup>

  <!--This target ensures, that all munually copied files are contained in the created NuGet-Packages and copied into the output of consuming projects.
  The AfterTargets and BeforeTargets can probably be set to better values, but this worked for me.-->
  <Target Name="ManuallyCopiedFilesNuGetManagement"
          BeforeTargets="Build">

    <!--Include XmlSerializers.dll files in NuGet packages-->
    <ItemGroup>
      <None Include="$(OutputPath)\$(AssemblyName).XmlSerializers.dll"
            Condition="exists('$(OutputPath)\$(AssemblyName).XmlSerializers.dll')"
            Pack="true"
            PackagePath="$(BuildOutputTargetFolder)\$(TargetFramework)" />
      <!--This PackagePath with $(TargetFramework) does not work with the old project structure!-->
    </ItemGroup>

    <!--Include dll.config files in NuGet packages-->
    <ItemGroup>
      <None Include="$(OutputPath)\$(AssemblyName).dll.config"
            Condition="exists('$(OutputPath)\$(AssemblyName).dll.config')"
            Pack="true"
            PackagePath="ManuallyCopiedFiles" />
    </ItemGroup>

    <!--Include deps.json files in NuGet packages-->
    <ItemGroup>
      <None Include="$(OutputPath)\$(AssemblyName).deps.json"
            Condition="exists('$(OutputPath)\$(AssemblyName).deps.json')"
            Pack="true"
            PackagePath="ManuallyCopiedFiles" />
    </ItemGroup>

    <!--Include manually copied files in NuGet packages and ensure they are copied in consuming projects-->
    <ItemGroup>
      <Content Include="$(SolutionDir)\CommonFiles\CommonNuGetBuildTransitive.targets"
               Pack="true"
               PackagePath="buildTransitive\$(AssemblyName).targets" />
      <None Update="@(None)"
            Condition="%(CopyToOutputDirectory) == PreserveNewest or %(CopyToOutputDirectory) == Always"
            Pack="true"
            PackagePath="ManuallyCopiedFiles" />
      <Content Update="@(Content)"
               Condition="%(CopyToOutputDirectory) == PreserveNewest or %(CopyToOutputDirectory) == Always"
               Pack="true"
               PackagePath="ManuallyCopiedFiles;content;contentFiles\any\$(TargetFramework)" />
      <!--This PackagePath with $(TargetFramework) does not work with the old project structure!-->
      <!--From what I have seen the default PackagePath is defined in NuGet.Build.Tasks.Pack.PackTaskLogic.GetContentMetadata
      wich is called in the PackTask itself so it is impossible to define a target that simply 'adds' a PackagePath; it is currently only possible to override it.
      So eaven if I would prefer to use ;%(Content.PackagePath) at the end of the PackagePath, it would do nothing.-->
    </ItemGroup>

  </Target>

</Project>
